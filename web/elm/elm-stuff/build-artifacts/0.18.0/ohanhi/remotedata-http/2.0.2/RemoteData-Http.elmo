var _ohanhi$remotedata_http$RemoteData_Http$queryEscape = function (string) {
	return A2(
		_elm_lang$core$String$join,
		'+',
		A2(
			_elm_lang$core$String$split,
			'%20',
			_elm_lang$http$Http$encodeUri(string)));
};
var _ohanhi$remotedata_http$RemoteData_Http$queryPair = function (_p0) {
	var _p1 = _p0;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_ohanhi$remotedata_http$RemoteData_Http$queryEscape(_p1._0),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'=',
			_ohanhi$remotedata_http$RemoteData_Http$queryEscape(_p1._1)));
};
var _ohanhi$remotedata_http$RemoteData_Http$url = F2(
	function (baseUrl, args) {
		var _p2 = args;
		if (_p2.ctor === '[]') {
			return baseUrl;
		} else {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				baseUrl,
				A2(
					_elm_lang$core$Basics_ops['++'],
					'?',
					A2(
						_elm_lang$core$String$join,
						'&',
						A2(_elm_lang$core$List$map, _ohanhi$remotedata_http$RemoteData_Http$queryPair, args))));
		}
	});
var _ohanhi$remotedata_http$RemoteData_Http$defaultConfig = {
	headers: {ctor: '[]'},
	withCredentials: false,
	timeout: _elm_lang$core$Maybe$Nothing
};
var _ohanhi$remotedata_http$RemoteData_Http$request = F5(
	function (config, method, url, successDecoder, body) {
		return _elm_lang$http$Http$request(
			{
				method: method,
				headers: config.headers,
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(successDecoder),
				timeout: config.timeout,
				withCredentials: config.withCredentials
			});
	});
var _ohanhi$remotedata_http$RemoteData_Http$getRequest = F3(
	function (config, url, decoder) {
		return A5(_ohanhi$remotedata_http$RemoteData_Http$request, config, 'GET', url, decoder, _elm_lang$http$Http$emptyBody);
	});
var _ohanhi$remotedata_http$RemoteData_Http$toTask = function (request) {
	return A2(
		_elm_lang$core$Task$onError,
		function (_p3) {
			return _elm_lang$core$Task$succeed(
				_krisajenkins$remotedata$RemoteData$Failure(_p3));
		},
		A2(
			_elm_lang$core$Task$map,
			_krisajenkins$remotedata$RemoteData$Success,
			_elm_lang$http$Http$toTask(request)));
};
var _ohanhi$remotedata_http$RemoteData_Http$getTaskWithConfig = F3(
	function (config, url, decoder) {
		return _ohanhi$remotedata_http$RemoteData_Http$toTask(
			A3(_ohanhi$remotedata_http$RemoteData_Http$getRequest, config, url, decoder));
	});
var _ohanhi$remotedata_http$RemoteData_Http$postTaskWithConfig = F4(
	function (config, url, decoder, body) {
		return _ohanhi$remotedata_http$RemoteData_Http$toTask(
			A5(
				_ohanhi$remotedata_http$RemoteData_Http$request,
				config,
				'POST',
				url,
				decoder,
				_elm_lang$http$Http$jsonBody(body)));
	});
var _ohanhi$remotedata_http$RemoteData_Http$postTask = _ohanhi$remotedata_http$RemoteData_Http$postTaskWithConfig(_ohanhi$remotedata_http$RemoteData_Http$defaultConfig);
var _ohanhi$remotedata_http$RemoteData_Http$putTaskWithConfig = F4(
	function (config, url, decoder, body) {
		return _ohanhi$remotedata_http$RemoteData_Http$toTask(
			A5(
				_ohanhi$remotedata_http$RemoteData_Http$request,
				config,
				'PUT',
				url,
				decoder,
				_elm_lang$http$Http$jsonBody(body)));
	});
var _ohanhi$remotedata_http$RemoteData_Http$putTask = _ohanhi$remotedata_http$RemoteData_Http$putTaskWithConfig(_ohanhi$remotedata_http$RemoteData_Http$defaultConfig);
var _ohanhi$remotedata_http$RemoteData_Http$patchTaskWithConfig = F4(
	function (config, url, decoder, body) {
		return _ohanhi$remotedata_http$RemoteData_Http$toTask(
			A5(
				_ohanhi$remotedata_http$RemoteData_Http$request,
				config,
				'PATCH',
				url,
				decoder,
				_elm_lang$http$Http$jsonBody(body)));
	});
var _ohanhi$remotedata_http$RemoteData_Http$patchTask = _ohanhi$remotedata_http$RemoteData_Http$patchTaskWithConfig(_ohanhi$remotedata_http$RemoteData_Http$defaultConfig);
var _ohanhi$remotedata_http$RemoteData_Http$deleteTaskWithConfig = F3(
	function (config, url, body) {
		return _ohanhi$remotedata_http$RemoteData_Http$toTask(
			_elm_lang$http$Http$request(
				{
					method: 'DELETE',
					headers: config.headers,
					url: url,
					body: _elm_lang$http$Http$jsonBody(body),
					expect: _elm_lang$http$Http$expectString,
					timeout: config.timeout,
					withCredentials: config.withCredentials
				}));
	});
var _ohanhi$remotedata_http$RemoteData_Http$deleteTask = _ohanhi$remotedata_http$RemoteData_Http$deleteTaskWithConfig(_ohanhi$remotedata_http$RemoteData_Http$defaultConfig);
var _ohanhi$remotedata_http$RemoteData_Http$toCmd = function (tagger) {
	return _elm_lang$http$Http$send(
		function (_p4) {
			return tagger(
				_krisajenkins$remotedata$RemoteData$fromResult(_p4));
		});
};
var _ohanhi$remotedata_http$RemoteData_Http$getWithConfig = F4(
	function (config, url, tagger, decoder) {
		return A2(
			_ohanhi$remotedata_http$RemoteData_Http$toCmd,
			tagger,
			A3(_ohanhi$remotedata_http$RemoteData_Http$getRequest, config, url, decoder));
	});
var _ohanhi$remotedata_http$RemoteData_Http$postWithConfig = F5(
	function (config, url, tagger, decoder, body) {
		return A2(
			_ohanhi$remotedata_http$RemoteData_Http$toCmd,
			tagger,
			A5(
				_ohanhi$remotedata_http$RemoteData_Http$request,
				config,
				'POST',
				url,
				decoder,
				_elm_lang$http$Http$jsonBody(body)));
	});
var _ohanhi$remotedata_http$RemoteData_Http$post = _ohanhi$remotedata_http$RemoteData_Http$postWithConfig(_ohanhi$remotedata_http$RemoteData_Http$defaultConfig);
var _ohanhi$remotedata_http$RemoteData_Http$putWithConfig = F5(
	function (config, url, tagger, decoder, body) {
		return A2(
			_ohanhi$remotedata_http$RemoteData_Http$toCmd,
			tagger,
			A5(
				_ohanhi$remotedata_http$RemoteData_Http$request,
				config,
				'PUT',
				url,
				decoder,
				_elm_lang$http$Http$jsonBody(body)));
	});
var _ohanhi$remotedata_http$RemoteData_Http$put = _ohanhi$remotedata_http$RemoteData_Http$putWithConfig(_ohanhi$remotedata_http$RemoteData_Http$defaultConfig);
var _ohanhi$remotedata_http$RemoteData_Http$patchWithConfig = F5(
	function (config, url, tagger, decoder, body) {
		return A2(
			_ohanhi$remotedata_http$RemoteData_Http$toCmd,
			tagger,
			A5(
				_ohanhi$remotedata_http$RemoteData_Http$request,
				config,
				'PATCH',
				url,
				decoder,
				_elm_lang$http$Http$jsonBody(body)));
	});
var _ohanhi$remotedata_http$RemoteData_Http$patch = _ohanhi$remotedata_http$RemoteData_Http$patchWithConfig(_ohanhi$remotedata_http$RemoteData_Http$defaultConfig);
var _ohanhi$remotedata_http$RemoteData_Http$deleteWithConfig = F4(
	function (config, url, tagger, body) {
		return A2(
			_ohanhi$remotedata_http$RemoteData_Http$toCmd,
			tagger,
			_elm_lang$http$Http$request(
				{
					method: 'DELETE',
					headers: config.headers,
					url: url,
					body: _elm_lang$http$Http$jsonBody(body),
					expect: _elm_lang$http$Http$expectString,
					timeout: config.timeout,
					withCredentials: config.withCredentials
				}));
	});
var _ohanhi$remotedata_http$RemoteData_Http$delete = _ohanhi$remotedata_http$RemoteData_Http$deleteWithConfig(_ohanhi$remotedata_http$RemoteData_Http$defaultConfig);
var _ohanhi$remotedata_http$RemoteData_Http$noCache = A2(_elm_lang$http$Http$header, 'Cache-Control', 'no-store, must-revalidate, no-cache, max-age=0');
var _ohanhi$remotedata_http$RemoteData_Http$noCacheConfig = _elm_lang$core$Native_Utils.update(
	_ohanhi$remotedata_http$RemoteData_Http$defaultConfig,
	{
		headers: {
			ctor: '::',
			_0: _ohanhi$remotedata_http$RemoteData_Http$noCache,
			_1: {ctor: '[]'}
		}
	});
var _ohanhi$remotedata_http$RemoteData_Http$getTask = _ohanhi$remotedata_http$RemoteData_Http$getTaskWithConfig(_ohanhi$remotedata_http$RemoteData_Http$noCacheConfig);
var _ohanhi$remotedata_http$RemoteData_Http$get = _ohanhi$remotedata_http$RemoteData_Http$getWithConfig(_ohanhi$remotedata_http$RemoteData_Http$noCacheConfig);
var _ohanhi$remotedata_http$RemoteData_Http$Config = F3(
	function (a, b, c) {
		return {headers: a, withCredentials: b, timeout: c};
	});
