var _user$project$JsonConverter$encodePlace1 = function (record) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'rating',
				_1: _elm_lang$core$Json_Encode$float(record.rating)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'name',
					_1: _elm_lang$core$Json_Encode$string(record.name)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'cuisine',
						_1: _elm_lang$core$Json_Encode$string(record.cuisine)
					},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$JsonConverter$encodePlace = function (record) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'place',
				_1: _user$project$JsonConverter$encodePlace1(record)
			},
			_1: {ctor: '[]'}
		});
};
var _user$project$JsonConverter$decodePlace = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'cuisine',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'id',
		_elm_lang$core$Json_Decode$int,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'name',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'rating',
				_elm_lang$core$Json_Decode$float,
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Types$Place)))));
var _user$project$JsonConverter$encodePlaces = function (record) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'data',
				_1: _elm_lang$core$Json_Encode$list(
					A2(_elm_lang$core$List$map, _user$project$JsonConverter$encodePlace, record.data))
			},
			_1: {ctor: '[]'}
		});
};
var _user$project$JsonConverter$decodePlacesData = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'data',
	_elm_lang$core$Json_Decode$list(_user$project$JsonConverter$decodePlace),
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Types$PlacesData));
