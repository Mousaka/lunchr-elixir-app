var _user$project$Luncher$viewPlaces = function (places) {
	var _p0 = places;
	switch (_p0.ctor) {
		case 'Loading':
			return _elm_lang$html$Html$text('Fetching places...');
		case 'Success':
			return _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Recieved places: ',
					_elm_lang$core$Basics$toString(_p0._0)));
		case 'Failure':
			return _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'This went wrong: ',
					_elm_lang$core$Basics$toString(_p0._0)));
		default:
			return A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$Types$GetPlaces),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Get places data from the server'),
					_1: {ctor: '[]'}
				});
	}
};
var _user$project$Luncher$addMsg = F2(
	function (msg, str) {
		return _user$project$Types$AddPlaceFormUpdate(
			msg(str));
	});
var _user$project$Luncher$addPlaceForm = function (addPlaceForm) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder('name'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(addPlaceForm.name),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(
								_user$project$Luncher$addMsg(_user$project$Types$Name)),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('cuisine'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(addPlaceForm.cuisine),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(
									_user$project$Luncher$addMsg(_user$project$Types$Cuisine)),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('rating'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$value(addPlaceForm.rating),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(
										_user$project$Luncher$addMsg(_user$project$Types$Rating)),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Types$AddPlace),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Nytt plejs'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Luncher$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Lunchr'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$Luncher$addPlaceForm(model.addPlaceForm),
				_1: {
					ctor: '::',
					_0: _user$project$Luncher$viewPlaces(model.places),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Luncher$updateAddPlaceForm = F2(
	function (addPlaceForm, msg) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Name':
				return _elm_lang$core$Native_Utils.update(
					addPlaceForm,
					{name: _p1._0});
			case 'Cuisine':
				return _elm_lang$core$Native_Utils.update(
					addPlaceForm,
					{cuisine: _p1._0});
			default:
				return _elm_lang$core$Native_Utils.update(
					addPlaceForm,
					{rating: _p1._0});
		}
	});
var _user$project$Luncher$placeFormToPlace = function (placeForm) {
	var rating = A2(
		_elm_lang$core$Result$withDefault,
		0.0,
		_elm_lang$core$String$toFloat(placeForm.rating));
	return {rating: rating, name: placeForm.name, id: 0, cuisine: placeForm.cuisine};
};
var _user$project$Luncher$postNewPlace = function (place) {
	var convertedPlace = _user$project$Luncher$placeFormToPlace(place);
	return A4(
		_ohanhi$remotedata_http$RemoteData_Http$post,
		'/api/places/',
		_user$project$Types$HandlePostPlace,
		_user$project$JsonConverter$decodePlace,
		_user$project$JsonConverter$encodePlace(convertedPlace));
};
var _user$project$Luncher$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'HandlePlacesResponse':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							places: A2(
								_krisajenkins$remotedata$RemoteData$map,
								function (_) {
									return _.data;
								},
								_p2._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'HandlePostPlace':
				var _p3 = _p2._0;
				switch (_p3.ctor) {
					case 'Success':
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{addPlaceForm: _user$project$Types$emptyAddPlaceForm, places: _krisajenkins$remotedata$RemoteData$Loading}),
							_1: A3(_ohanhi$remotedata_http$RemoteData_Http$get, '/api/places/', _user$project$Types$HandlePlacesResponse, _user$project$JsonConverter$decodePlacesData)
						};
					case 'Failure':
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
					case 'Loading':
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
					default:
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'GetPlaces':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{places: _krisajenkins$remotedata$RemoteData$Loading}),
					_1: A3(_ohanhi$remotedata_http$RemoteData_Http$get, '/api/places/', _user$project$Types$HandlePlacesResponse, _user$project$JsonConverter$decodePlacesData)
				};
			case 'AddPlaceFormUpdate':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							addPlaceForm: A2(_user$project$Luncher$updateAddPlaceForm, model.addPlaceForm, _p2._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Luncher$postNewPlace(model.addPlaceForm)
				};
		}
	});
var _user$project$Luncher$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Types$init,
		subscriptions: function (_p4) {
			return _elm_lang$core$Platform_Sub$none;
		},
		update: _user$project$Luncher$update,
		view: _user$project$Luncher$view
	})();
